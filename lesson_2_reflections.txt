What happens when you initialize a repository?
Why do you need to do it?

Git creates a repository without any commits. It
creates a hidden folder for all the different
versions of the files, metadata about them and
so on.

How is the staging area different from the working
directory and the repository? What value do you
think it offers?

The staging area is like place in the middle where
you put all the files you want to commit when the
next commit is made. It makes it possible to
select the files you wish to be part of the commit
and that is a good thing.

How can you use the staging area to make sure you
have one commit per logical change?

Use the command git diff --staged.

What are some situations when branches would be
helpful in keeping your history organized? How
would branches help?

When trying out new features that you don't
know for certain will be kept in the feuture.
When developing different final versions of the
finished product.

How do the diagrams help you visualize the branch
structure?

They make it easy to follow the path of made commits
in different branches back in time. You can easily
se wich one is connected to another.

What is the result of merging two branches together?
Why do we represent it in the diagram the way we do?

To combine code from diffrent branches. Each branch
still has its history so that you can look back at
the changes made in each branch.

What are the pros and cons of Git´s automatic
merging vs. always doing merges manually?

When it´s obvious that there will be no conflict in
a merge, automatic merge works just fine. It speeds
up time does a lot of job automaticly for you. When
there are conflict it lets you decide how to resolve
them.
